#!/bin/bash

# Copyright 2016 The Kubernetes Authors All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script generates the Github Release page and uploads all the binaries/etc to that page
# This is intended to be run on a new release tag in order to generate the github release page for that release

# The script expects the following env variables:
# VERSION_MAJOR: The major version of the tag to be released.
# VERSION_MINOR: The minor version of the tag to be released.
# VERSION_BUILD: The build version of the tag to be released.

set -e

export TAGNAME=v${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_BUILD}

export DARWIN_SHA256=$(cat out/minikube-darwin-amd64.sha256)
export LINUX_SHA256=$(cat out/minikube-linux-amd64.sha256)
export WINDOWS_SHA256=$(cat out/minikube-windows-amd64.exe.sha256)

# Update releases.json w/ new release in gcs and github
git config user.name "minikube-bot"
git config user.email "minikube-bot@google.com"

git checkout -b "jenkins-releases.json-${TAGNAME}"

git status

#Prepends the new version to the release.json file
sed -i "0,/{/s/{/{\n      \"name\": \"${TAGNAME}\",\n      \"checksums\": {\n          \"darwin\": \"${DARWIN_SHA256}\",\n          \"linux\": \"${LINUX_SHA256}\",\n          \"windows\": \"${WINDOWS_SHA256}\"\n      }\n  },\n  {"/ deploy/minikube/releases.json

export LINUX_SHA512=$(shasum -a 512 out/minikube-linux-amd64 | awk '{print $1}')
export MINIKUBE_VERSION=${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_BUILD}
export PKGBUILD_DIR="installers/linux/archlinux"

cat > ${PKGBUILD_DIR}/"PKGBUILD" <<EOL
# vim: ts=2 sts=2 sw=2 et ft=sh
# Maintainer: Matt Rickard <mrick@google.com>
# THIS FILE IS AUTOGENERATED
#
# PLEASE EDIT https://github.com/kubernetes/minikube/blob/master/hack/jenkins/release_update_releases_json.sh

pkgname=minikube
pkgver=${MINIKUBE_VERSION}
pkgrel=1
pkgdesc="Minikube is a tool that makes it easy to run Kubernetes locally"
url="https://github.com/kubernetes/minikube"
license=('Apache')
arch=('x86_64')
depends=(
  'net-tools'
)
optdepends=(
  'kubectl-bin: to manage the cluster'
  'virtualbox'
  'docker-machine-kvm'
)
makedepends=()

source=(minikube_\$pkgver::https://storage.googleapis.com/minikube/releases/v\$pkgver/minikube-linux-amd64)
sha512sums=('${LINUX_SHA512}')

package() {
  cd "\$srcdir"
  install -d "\$pkgdir/usr/bin"
  install -m755 minikube_\$pkgver "\$pkgdir/usr/bin/minikube"
}
EOL

cat > ${PKGBUILD_DIR}/".SRCINFO" <<EOL
pkgbase = minikube
	pkgdesc = Minikube is a tool that makes it easy to run Kubernetes locally
	pkgver = ${MINIKUBE_VERSION}
	pkgrel = 1
	url = https://github.com/kubernetes/minikube
	arch = x86_64
	license = Apache
	depends = net-tools
	optdepends = kubectl-bin: to manage the cluster
	optdepends = virtualbox
	optdepends = docker-machine-kvm
	source = minikube_${MINIKUBE_VERSION}::https://storage.googleapis.com/minikube/releases/v${MINIKUBE_VERSION}/minikube-linux-amd64
	sha512sums = ${LINUX_SHA512}

pkgname = minikube
EOL

git add -A
git commit -m "Update releases.json to include ${TAGNAME}"
git remote add minikube-bot git@github.com:minikube-bot/minikube.git
git push -f minikube-bot jenkins-releases.json-${TAGNAME}

# Send PR from minikube-bot/minikube to kubernetes/minikube
curl -X POST -u minikube-bot:${BOT_PASSWORD} -k   -d "{\"title\": \"update releases.json to include ${TAGNAME}\",\"head\": \"minikube-bot:jenkins-releases.json-${TAGNAME}\",\"base\": \"master\"}" https://api.github.com/repos/kubernetes/minikube/pulls

# Upload file to GCS so that minikube can see the new version
gsutil cp deploy/minikube/releases.json gs://minikube/releases.json
